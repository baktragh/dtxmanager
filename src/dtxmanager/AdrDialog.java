/*
 * AdrDialog.java
 *
 * Created on 16. Ä?erven 2007, 14:48
 */
package dtxmanager;

import javax.swing.*;

/**
 *
 */
public class AdrDialog extends javax.swing.JDialog {

    /*Result - OK or Cancel*/
    public int result = 0;

    private int sec_start;
    private int sec_end;
    private int sec_len;

    private int jump_1;
    private int jump_2;

    public AdrDialog() {
        initComponents();
        setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pControls = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        pMain = new javax.swing.JPanel();
        pDataSection = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfStart = new javax.swing.JTextField();
        jtfEnd = new javax.swing.JTextField();
        btnAutoEnd = new javax.swing.JButton();
        pJumpSection = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfJump = new javax.swing.JTextField();
        jtfJump2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Section");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dialog_close(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        pControls.add(btnOk);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pControls.add(btnCancel);

        getContentPane().add(pControls, java.awt.BorderLayout.SOUTH);

        pMain.setLayout(new java.awt.GridLayout(2, 0));

        pDataSection.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Data section"));
        pDataSection.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Section start:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pDataSection.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Section end:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pDataSection.add(jLabel2, gridBagConstraints);

        jtfStart.setColumns(24);
        jtfStart.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtfStart.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pDataSection.add(jtfStart, gridBagConstraints);

        jtfEnd.setColumns(24);
        jtfEnd.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtfEnd.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pDataSection.add(jtfEnd, gridBagConstraints);

        btnAutoEnd.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnAutoEnd.setText("Auto end");
        btnAutoEnd.setToolTipText("Automatically count section end using section data length");
        btnAutoEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoEndActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        pDataSection.add(btnAutoEnd, gridBagConstraints);

        pMain.add(pDataSection);

        pJumpSection.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "RUN/INIT/RUNINIT"));
        pJumpSection.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("RUN:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pJumpSection.add(jLabel3, gridBagConstraints);

        jLabel4.setText("INIT:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pJumpSection.add(jLabel4, gridBagConstraints);

        jtfJump.setColumns(24);
        jtfJump.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtfJump.setText("0");
        jtfJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfJumpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pJumpSection.add(jtfJump, gridBagConstraints);

        jtfJump2.setColumns(24);
        jtfJump2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtfJump2.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        pJumpSection.add(jtfJump2, gridBagConstraints);

        pMain.add(pJumpSection);

        getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAutoEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoEndActionPerformed

        int p = -1;
        try {
            p = Integer.parseInt(jtfStart.getText());
        }
        catch (Exception e) {
            p = -1;
        }
        if (p < 0 || p > 65535) {
            JOptionPane.showMessageDialog(this, "Invalid values in fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        p += sec_len - 1;
        jtfEnd.setText(Integer.toString(p));
    }//GEN-LAST:event_btnAutoEndActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        /*Check if ok*/
        boolean ok = true;
        this.sec_start = -1;
        this.sec_end = -1;
        this.jump_1 = -1;
        this.jump_2 = -1;

        try {
            this.sec_start = Integer.parseInt(jtfStart.getText());
            this.sec_end = Integer.parseInt(jtfEnd.getText());
            this.jump_1 = Integer.parseInt(jtfJump.getText());
            this.jump_2 = Integer.parseInt(jtfJump2.getText());
        }
        catch (Exception e) {
            ok = false;
        }

        if (sec_start < 0 || sec_start > 65535) {
            ok = false;
        }
        if (sec_end < 0 || sec_end > 65535) {
            ok = false;
        }
        if (jump_1 < 0 || jump_1 > 65535) {
            ok = false;
        }
        if (jump_2 < 0 || jump_2 > 65535) {
            ok = false;
        }
        if (sec_start > sec_end) {
            ok = false;
        }

        if (ok == false) {
            JOptionPane.showMessageDialog(this, "Invalid values in fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        result = 1;
        setVisible(false);

    }//GEN-LAST:event_btnOkActionPerformed

    private void dialog_close(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dialog_close
        result = 0;
        setVisible(false);
    }//GEN-LAST:event_dialog_close

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        result = 0;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jtfJumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfJumpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfJumpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdrDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoEnd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jtfEnd;
    private javax.swing.JTextField jtfJump;
    private javax.swing.JTextField jtfJump2;
    private javax.swing.JTextField jtfStart;
    private javax.swing.JPanel pControls;
    private javax.swing.JPanel pDataSection;
    private javax.swing.JPanel pJumpSection;
    private javax.swing.JPanel pMain;
    // End of variables declaration//GEN-END:variables

    public void setMode(int sectionType) {
        if (sectionType == Section.COMMON_SECTION || sectionType == Section.MOVEBLOCK_SECTION) {
            jtfJump2.setEnabled(false);
            jtfJump.setEnabled(false);
            jtfStart.setEnabled(true);
            jtfEnd.setEnabled(true);
            btnAutoEnd.setEnabled(true);
            return;
        }
        if (sectionType == Section.INIT_SECTION || sectionType == Section.RUN_SECTION) {
            jtfJump2.setEnabled(false);
            jtfJump.setEnabled(true);
            jtfStart.setEnabled(false);
            jtfEnd.setEnabled(false);
            btnAutoEnd.setEnabled(false);
            return;
        }

        jtfJump2.setEnabled(true);
        jtfJump.setEnabled(true);
        jtfStart.setEnabled(false);
        jtfEnd.setEnabled(false);
    }

    public void setValues(int ss, int se, int j1, int j2, int len) {
        if (ss != -1) {
            jtfStart.setText(Integer.toString(ss));
        }
        if (se != -1) {
            jtfEnd.setText(Integer.toString(se));
        }
        if (j1 != -1) {
            jtfJump.setText(Integer.toString(j1));
        }
        if (j2 != -1) {
            jtfJump2.setText(Integer.toString(j2));
        }
        sec_len = len;
    }

    public int getStart() {
        return sec_start;
    }

    public int getEnd() {
        return sec_end;
    }

    public int getJump() {
        return jump_1;
    }

    public int getJump2() {
        return jump_2;
    }

}
